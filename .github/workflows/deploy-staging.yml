name: CI and Deployment Workflow

on:
  push:
    branches: [main]
  pull_request:
    types: [opened, synchronize, reopened, labeled]

permissions:
  contents: read
  security-events: write
  packages: write
  id-token: write
  pull-requests: write

env:
  AZURE_WEBAPP_NAME: msalsouri-skills-deploy-to-azure-app
  IMAGE_NAME: ghcr.io/msalsouri/skills-publish-packages

jobs:
  codeql:
    name: ðŸ”  CodeQL Analysis
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      contents: read
    steps:
      - uses: actions/checkout@v4
      - uses: github/codeql-action/init@v3
        with:
          languages: javascript
      - uses: github/codeql-action/analyze@v3

  build:
    name: ðŸ“š Build & Publish Docker Image
    runs-on: ubuntu-latest
    needs: codeql
    permissions:
      packages: write
      contents: read
      id-token: write
    if: contains(github.event.pull_request.labels.*.name, 'deploy-staging') || github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v4

      - name: Log in to GHCR using OIDC
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Define Docker image tags
        id: tag
        run: |
          echo "sha_tag=ghcr.io/msalsouri/skills-publish-packages:${{ github.sha }}" >> $GITHUB_OUTPUT
          if [[ '${{ github.ref }}' == 'refs/heads/main' ]]; then
            echo "main_tag=ghcr.io/msalsouri/skills-publish-packages:main" >> $GITHUB_OUTPUT
          fi

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image with caching
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ steps.tag.outputs.sha_tag }}
            ${{ steps.tag.outputs.main_tag || '' }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy-staging:
    name: âœ… Auto Deploy to Staging
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: read
      id-token: write
    if: contains(github.event.pull_request.labels.*.name, 'deploy-staging')

    steps:
      - uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          images: ghcr.io/msalsouri/skills-publish-packages:${{ github.sha }}

  deploy-production:
    name: ðŸ”§ Auto Deploy to Production
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    permissions:
      id-token: write
    steps:
      - uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          images: ghcr.io/msalsouri/skills-publish-packages:main